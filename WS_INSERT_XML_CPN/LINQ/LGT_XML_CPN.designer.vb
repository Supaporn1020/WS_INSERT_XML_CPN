'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FDA_XML_CPN")>  _
Partial Public Class LGT_XML_CPNDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertXML_CPN_KEEP_DRUG(instance As XML_CPN_KEEP_DRUG)
    End Sub
  Partial Private Sub UpdateXML_CPN_KEEP_DRUG(instance As XML_CPN_KEEP_DRUG)
    End Sub
  Partial Private Sub DeleteXML_CPN_KEEP_DRUG(instance As XML_CPN_KEEP_DRUG)
    End Sub
  Partial Private Sub InsertXML_CPN_KEEP_CMT(instance As XML_CPN_KEEP_CMT)
    End Sub
  Partial Private Sub UpdateXML_CPN_KEEP_CMT(instance As XML_CPN_KEEP_CMT)
    End Sub
  Partial Private Sub DeleteXML_CPN_KEEP_CMT(instance As XML_CPN_KEEP_CMT)
    End Sub
  Partial Private Sub InsertXML_CPN_KEEP_TXC(instance As XML_CPN_KEEP_TXC)
    End Sub
  Partial Private Sub UpdateXML_CPN_KEEP_TXC(instance As XML_CPN_KEEP_TXC)
    End Sub
  Partial Private Sub DeleteXML_CPN_KEEP_TXC(instance As XML_CPN_KEEP_TXC)
    End Sub
  Partial Private Sub InsertXML_CPN_KEEP_NCT(instance As XML_CPN_KEEP_NCT)
    End Sub
  Partial Private Sub UpdateXML_CPN_KEEP_NCT(instance As XML_CPN_KEEP_NCT)
    End Sub
  Partial Private Sub DeleteXML_CPN_KEEP_NCT(instance As XML_CPN_KEEP_NCT)
    End Sub
  Partial Private Sub InsertXML_CPN_KEEP_PATH(instance As XML_CPN_KEEP_PATH)
    End Sub
  Partial Private Sub UpdateXML_CPN_KEEP_PATH(instance As XML_CPN_KEEP_PATH)
    End Sub
  Partial Private Sub DeleteXML_CPN_KEEP_PATH(instance As XML_CPN_KEEP_PATH)
    End Sub
  Partial Private Sub InsertXML_CPN_KEEP_SIP(instance As XML_CPN_KEEP_SIP)
    End Sub
  Partial Private Sub UpdateXML_CPN_KEEP_SIP(instance As XML_CPN_KEEP_SIP)
    End Sub
  Partial Private Sub DeleteXML_CPN_KEEP_SIP(instance As XML_CPN_KEEP_SIP)
    End Sub
  Partial Private Sub InsertXML_CPN_KEEP_FOOD(instance As XML_CPN_KEEP_FOOD)
    End Sub
  Partial Private Sub UpdateXML_CPN_KEEP_FOOD(instance As XML_CPN_KEEP_FOOD)
    End Sub
  Partial Private Sub DeleteXML_CPN_KEEP_FOOD(instance As XML_CPN_KEEP_FOOD)
    End Sub
  Partial Private Sub InsertXML_CPN_KEEP_FOOD_TEMP(instance As XML_CPN_KEEP_FOOD_TEMP)
    End Sub
  Partial Private Sub UpdateXML_CPN_KEEP_FOOD_TEMP(instance As XML_CPN_KEEP_FOOD_TEMP)
    End Sub
  Partial Private Sub DeleteXML_CPN_KEEP_FOOD_TEMP(instance As XML_CPN_KEEP_FOOD_TEMP)
    End Sub
  Partial Private Sub InsertXML_CPN_KEEP_MDC(instance As XML_CPN_KEEP_MDC)
    End Sub
  Partial Private Sub UpdateXML_CPN_KEEP_MDC(instance As XML_CPN_KEEP_MDC)
    End Sub
  Partial Private Sub DeleteXML_CPN_KEEP_MDC(instance As XML_CPN_KEEP_MDC)
    End Sub
  Partial Private Sub InsertXML_CPN_KEEP_MDC_TEMP(instance As XML_CPN_KEEP_MDC_TEMP)
    End Sub
  Partial Private Sub UpdateXML_CPN_KEEP_MDC_TEMP(instance As XML_CPN_KEEP_MDC_TEMP)
    End Sub
  Partial Private Sub DeleteXML_CPN_KEEP_MDC_TEMP(instance As XML_CPN_KEEP_MDC_TEMP)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("FDA_XML_CPNConnectionString1").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property XML_CPN_KEEP_DRUGs() As System.Data.Linq.Table(Of XML_CPN_KEEP_DRUG)
		Get
			Return Me.GetTable(Of XML_CPN_KEEP_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property XML_CPN_KEEP_CMTs() As System.Data.Linq.Table(Of XML_CPN_KEEP_CMT)
		Get
			Return Me.GetTable(Of XML_CPN_KEEP_CMT)
		End Get
	End Property
	
	Public ReadOnly Property XML_CPN_KEEP_TXCs() As System.Data.Linq.Table(Of XML_CPN_KEEP_TXC)
		Get
			Return Me.GetTable(Of XML_CPN_KEEP_TXC)
		End Get
	End Property
	
	Public ReadOnly Property XML_CPN_KEEP_NCTs() As System.Data.Linq.Table(Of XML_CPN_KEEP_NCT)
		Get
			Return Me.GetTable(Of XML_CPN_KEEP_NCT)
		End Get
	End Property
	
	Public ReadOnly Property XML_CPN_KEEP_PATHs() As System.Data.Linq.Table(Of XML_CPN_KEEP_PATH)
		Get
			Return Me.GetTable(Of XML_CPN_KEEP_PATH)
		End Get
	End Property
	
	Public ReadOnly Property XML_CPN_KEEP_SIPs() As System.Data.Linq.Table(Of XML_CPN_KEEP_SIP)
		Get
			Return Me.GetTable(Of XML_CPN_KEEP_SIP)
		End Get
	End Property
	
	Public ReadOnly Property XML_CPN_KEEP_FOODs() As System.Data.Linq.Table(Of XML_CPN_KEEP_FOOD)
		Get
			Return Me.GetTable(Of XML_CPN_KEEP_FOOD)
		End Get
	End Property
	
	Public ReadOnly Property XML_CPN_KEEP_FOOD_TEMPs() As System.Data.Linq.Table(Of XML_CPN_KEEP_FOOD_TEMP)
		Get
			Return Me.GetTable(Of XML_CPN_KEEP_FOOD_TEMP)
		End Get
	End Property
	
	Public ReadOnly Property XML_CPN_KEEP_MDCs() As System.Data.Linq.Table(Of XML_CPN_KEEP_MDC)
		Get
			Return Me.GetTable(Of XML_CPN_KEEP_MDC)
		End Get
	End Property
	
	Public ReadOnly Property XML_CPN_KEEP_MDC_TEMPs() As System.Data.Linq.Table(Of XML_CPN_KEEP_MDC_TEMP)
		Get
			Return Me.GetTable(Of XML_CPN_KEEP_MDC_TEMP)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_CPN_KEEP_DRUG")>  _
Partial Public Class XML_CPN_KEEP_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Newcode As String
	
	Private _groupname As String
	
	Private _Status As String
	
	Private _CREATE_DATE_INSERT_XML As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ERROR_LOG As String
	
	Private _XML_DATA As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OngroupnameChanging(value As String)
    End Sub
    Partial Private Sub OngroupnameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnERROR_LOGChanging(value As String)
    End Sub
    Partial Private Sub OnERROR_LOGChanged()
    End Sub
    Partial Private Sub OnXML_DATAChanging(value As String)
    End Sub
    Partial Private Sub OnXML_DATAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupname", DbType:="NVarChar(10)")>  _
	Public Property groupname() As String
		Get
			Return Me._groupname
		End Get
		Set
			If (String.Equals(Me._groupname, value) = false) Then
				Me.OngroupnameChanging(value)
				Me.SendPropertyChanging
				Me._groupname = value
				Me.SendPropertyChanged("groupname")
				Me.OngroupnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE_INSERT_XML", DbType:="DateTime")>  _
	Public Property CREATE_DATE_INSERT_XML() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE_INSERT_XML
		End Get
		Set
			If (Me._CREATE_DATE_INSERT_XML.Equals(value) = false) Then
				Me.OnCREATE_DATE_INSERT_XMLChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE_INSERT_XML = value
				Me.SendPropertyChanged("CREATE_DATE_INSERT_XML")
				Me.OnCREATE_DATE_INSERT_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERROR_LOG", DbType:="NVarChar(MAX)")>  _
	Public Property ERROR_LOG() As String
		Get
			Return Me._ERROR_LOG
		End Get
		Set
			If (String.Equals(Me._ERROR_LOG, value) = false) Then
				Me.OnERROR_LOGChanging(value)
				Me.SendPropertyChanging
				Me._ERROR_LOG = value
				Me.SendPropertyChanged("ERROR_LOG")
				Me.OnERROR_LOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_DATA", DbType:="NVarChar(MAX)")>  _
	Public Property XML_DATA() As String
		Get
			Return Me._XML_DATA
		End Get
		Set
			If (String.Equals(Me._XML_DATA, value) = false) Then
				Me.OnXML_DATAChanging(value)
				Me.SendPropertyChanging
				Me._XML_DATA = value
				Me.SendPropertyChanged("XML_DATA")
				Me.OnXML_DATAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_CPN_KEEP_CMT")>  _
Partial Public Class XML_CPN_KEEP_CMT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Newcode As String
	
	Private _groupname As String
	
	Private _cmttypecd As String
	
	Private _cmtpdpstcd As String
	
	Private _Status As String
	
	Private _CREATE_DATE_INSERT_XML As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ERROR_LOG As String
	
	Private _XML_DATA As System.Xml.Linq.XElement
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OngroupnameChanging(value As String)
    End Sub
    Partial Private Sub OngroupnameChanged()
    End Sub
    Partial Private Sub OncmttypecdChanging(value As String)
    End Sub
    Partial Private Sub OncmttypecdChanged()
    End Sub
    Partial Private Sub OncmtpdpstcdChanging(value As String)
    End Sub
    Partial Private Sub OncmtpdpstcdChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnERROR_LOGChanging(value As String)
    End Sub
    Partial Private Sub OnERROR_LOGChanged()
    End Sub
    Partial Private Sub OnXML_DATAChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnXML_DATAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupname", DbType:="NVarChar(10)")>  _
	Public Property groupname() As String
		Get
			Return Me._groupname
		End Get
		Set
			If (String.Equals(Me._groupname, value) = false) Then
				Me.OngroupnameChanging(value)
				Me.SendPropertyChanging
				Me._groupname = value
				Me.SendPropertyChanged("groupname")
				Me.OngroupnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cmttypecd", DbType:="NChar(10)")>  _
	Public Property cmttypecd() As String
		Get
			Return Me._cmttypecd
		End Get
		Set
			If (String.Equals(Me._cmttypecd, value) = false) Then
				Me.OncmttypecdChanging(value)
				Me.SendPropertyChanging
				Me._cmttypecd = value
				Me.SendPropertyChanged("cmttypecd")
				Me.OncmttypecdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cmtpdpstcd", DbType:="NChar(10)")>  _
	Public Property cmtpdpstcd() As String
		Get
			Return Me._cmtpdpstcd
		End Get
		Set
			If (String.Equals(Me._cmtpdpstcd, value) = false) Then
				Me.OncmtpdpstcdChanging(value)
				Me.SendPropertyChanging
				Me._cmtpdpstcd = value
				Me.SendPropertyChanged("cmtpdpstcd")
				Me.OncmtpdpstcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE_INSERT_XML", DbType:="DateTime")>  _
	Public Property CREATE_DATE_INSERT_XML() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE_INSERT_XML
		End Get
		Set
			If (Me._CREATE_DATE_INSERT_XML.Equals(value) = false) Then
				Me.OnCREATE_DATE_INSERT_XMLChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE_INSERT_XML = value
				Me.SendPropertyChanged("CREATE_DATE_INSERT_XML")
				Me.OnCREATE_DATE_INSERT_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERROR_LOG", DbType:="NVarChar(MAX)")>  _
	Public Property ERROR_LOG() As String
		Get
			Return Me._ERROR_LOG
		End Get
		Set
			If (String.Equals(Me._ERROR_LOG, value) = false) Then
				Me.OnERROR_LOGChanging(value)
				Me.SendPropertyChanging
				Me._ERROR_LOG = value
				Me.SendPropertyChanged("ERROR_LOG")
				Me.OnERROR_LOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_DATA", DbType:="Xml", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property XML_DATA() As System.Xml.Linq.XElement
		Get
			Return Me._XML_DATA
		End Get
		Set
			If (Object.Equals(Me._XML_DATA, value) = false) Then
				Me.OnXML_DATAChanging(value)
				Me.SendPropertyChanging
				Me._XML_DATA = value
				Me.SendPropertyChanged("XML_DATA")
				Me.OnXML_DATAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_CPN_KEEP_TXC")>  _
Partial Public Class XML_CPN_KEEP_TXC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Newcode As String
	
	Private _groupname As String
	
	Private _Status As String
	
	Private _CREATE_DATE_INSERT_XML As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ERROR_LOG As String
	
	Private _XML_DATA As System.Xml.Linq.XElement
	
	Private _STATUS_CER As String
	
	Private _UPDATE_CER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OngroupnameChanging(value As String)
    End Sub
    Partial Private Sub OngroupnameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnERROR_LOGChanging(value As String)
    End Sub
    Partial Private Sub OnERROR_LOGChanged()
    End Sub
    Partial Private Sub OnXML_DATAChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnXML_DATAChanged()
    End Sub
    Partial Private Sub OnSTATUS_CERChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_CERChanged()
    End Sub
    Partial Private Sub OnUPDATE_CERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_CERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupname", DbType:="NVarChar(10)")>  _
	Public Property groupname() As String
		Get
			Return Me._groupname
		End Get
		Set
			If (String.Equals(Me._groupname, value) = false) Then
				Me.OngroupnameChanging(value)
				Me.SendPropertyChanging
				Me._groupname = value
				Me.SendPropertyChanged("groupname")
				Me.OngroupnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE_INSERT_XML", DbType:="DateTime")>  _
	Public Property CREATE_DATE_INSERT_XML() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE_INSERT_XML
		End Get
		Set
			If (Me._CREATE_DATE_INSERT_XML.Equals(value) = false) Then
				Me.OnCREATE_DATE_INSERT_XMLChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE_INSERT_XML = value
				Me.SendPropertyChanged("CREATE_DATE_INSERT_XML")
				Me.OnCREATE_DATE_INSERT_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERROR_LOG", DbType:="NVarChar(MAX)")>  _
	Public Property ERROR_LOG() As String
		Get
			Return Me._ERROR_LOG
		End Get
		Set
			If (String.Equals(Me._ERROR_LOG, value) = false) Then
				Me.OnERROR_LOGChanging(value)
				Me.SendPropertyChanging
				Me._ERROR_LOG = value
				Me.SendPropertyChanged("ERROR_LOG")
				Me.OnERROR_LOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_DATA", DbType:="Xml", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property XML_DATA() As System.Xml.Linq.XElement
		Get
			Return Me._XML_DATA
		End Get
		Set
			If (Object.Equals(Me._XML_DATA, value) = false) Then
				Me.OnXML_DATAChanging(value)
				Me.SendPropertyChanging
				Me._XML_DATA = value
				Me.SendPropertyChanged("XML_DATA")
				Me.OnXML_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_CER", DbType:="NVarChar(50)")>  _
	Public Property STATUS_CER() As String
		Get
			Return Me._STATUS_CER
		End Get
		Set
			If (String.Equals(Me._STATUS_CER, value) = false) Then
				Me.OnSTATUS_CERChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_CER = value
				Me.SendPropertyChanged("STATUS_CER")
				Me.OnSTATUS_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_CER", DbType:="NVarChar(50)")>  _
	Public Property UPDATE_CER() As String
		Get
			Return Me._UPDATE_CER
		End Get
		Set
			If (String.Equals(Me._UPDATE_CER, value) = false) Then
				Me.OnUPDATE_CERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_CER = value
				Me.SendPropertyChanged("UPDATE_CER")
				Me.OnUPDATE_CERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_CPN_KEEP_NCT")>  _
Partial Public Class XML_CPN_KEEP_NCT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Newcode As String
	
	Private _groupname As String
	
	Private _Status As String
	
	Private _CREATE_DATE_INSERT_XML As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ERROR_LOG As String
	
	Private _XML_DATA As System.Xml.Linq.XElement
	
	Private _STATUS_CER As String
	
	Private _UPDATE_CER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OngroupnameChanging(value As String)
    End Sub
    Partial Private Sub OngroupnameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnERROR_LOGChanging(value As String)
    End Sub
    Partial Private Sub OnERROR_LOGChanged()
    End Sub
    Partial Private Sub OnXML_DATAChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnXML_DATAChanged()
    End Sub
    Partial Private Sub OnSTATUS_CERChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_CERChanged()
    End Sub
    Partial Private Sub OnUPDATE_CERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_CERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupname", DbType:="NVarChar(10)")>  _
	Public Property groupname() As String
		Get
			Return Me._groupname
		End Get
		Set
			If (String.Equals(Me._groupname, value) = false) Then
				Me.OngroupnameChanging(value)
				Me.SendPropertyChanging
				Me._groupname = value
				Me.SendPropertyChanged("groupname")
				Me.OngroupnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE_INSERT_XML", DbType:="DateTime")>  _
	Public Property CREATE_DATE_INSERT_XML() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE_INSERT_XML
		End Get
		Set
			If (Me._CREATE_DATE_INSERT_XML.Equals(value) = false) Then
				Me.OnCREATE_DATE_INSERT_XMLChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE_INSERT_XML = value
				Me.SendPropertyChanged("CREATE_DATE_INSERT_XML")
				Me.OnCREATE_DATE_INSERT_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERROR_LOG", DbType:="NVarChar(MAX)")>  _
	Public Property ERROR_LOG() As String
		Get
			Return Me._ERROR_LOG
		End Get
		Set
			If (String.Equals(Me._ERROR_LOG, value) = false) Then
				Me.OnERROR_LOGChanging(value)
				Me.SendPropertyChanging
				Me._ERROR_LOG = value
				Me.SendPropertyChanged("ERROR_LOG")
				Me.OnERROR_LOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_DATA", DbType:="Xml", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property XML_DATA() As System.Xml.Linq.XElement
		Get
			Return Me._XML_DATA
		End Get
		Set
			If (Object.Equals(Me._XML_DATA, value) = false) Then
				Me.OnXML_DATAChanging(value)
				Me.SendPropertyChanging
				Me._XML_DATA = value
				Me.SendPropertyChanged("XML_DATA")
				Me.OnXML_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_CER", DbType:="NVarChar(50)")>  _
	Public Property STATUS_CER() As String
		Get
			Return Me._STATUS_CER
		End Get
		Set
			If (String.Equals(Me._STATUS_CER, value) = false) Then
				Me.OnSTATUS_CERChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_CER = value
				Me.SendPropertyChanged("STATUS_CER")
				Me.OnSTATUS_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_CER", DbType:="NVarChar(50)")>  _
	Public Property UPDATE_CER() As String
		Get
			Return Me._UPDATE_CER
		End Get
		Set
			If (String.Equals(Me._UPDATE_CER, value) = false) Then
				Me.OnUPDATE_CERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_CER = value
				Me.SendPropertyChanged("UPDATE_CER")
				Me.OnUPDATE_CERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_CPN_KEEP_PATH")>  _
Partial Public Class XML_CPN_KEEP_PATH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _XML_SQL As String
	
	Private _XML_TYPE As String
	
	Private _XML_PATH As String
	
	Private _XML_DESCRIPTION As String
	
	Private _GROUPNAME As String
	
	Private _TYPE_DESCRIPTION As String
	
	Private _XML_HEADER As String
	
	Private _XML_BODY As String
	
	Private _XML_FIELDS_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnXML_SQLChanging(value As String)
    End Sub
    Partial Private Sub OnXML_SQLChanged()
    End Sub
    Partial Private Sub OnXML_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnXML_TYPEChanged()
    End Sub
    Partial Private Sub OnXML_PATHChanging(value As String)
    End Sub
    Partial Private Sub OnXML_PATHChanged()
    End Sub
    Partial Private Sub OnXML_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnXML_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnGROUPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPNAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnXML_HEADERChanging(value As String)
    End Sub
    Partial Private Sub OnXML_HEADERChanged()
    End Sub
    Partial Private Sub OnXML_BODYChanging(value As String)
    End Sub
    Partial Private Sub OnXML_BODYChanged()
    End Sub
    Partial Private Sub OnXML_FIELDS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXML_FIELDS_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_SQL", DbType:="NVarChar(MAX)")>  _
	Public Property XML_SQL() As String
		Get
			Return Me._XML_SQL
		End Get
		Set
			If (String.Equals(Me._XML_SQL, value) = false) Then
				Me.OnXML_SQLChanging(value)
				Me.SendPropertyChanging
				Me._XML_SQL = value
				Me.SendPropertyChanged("XML_SQL")
				Me.OnXML_SQLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_TYPE", DbType:="NVarChar(50)")>  _
	Public Property XML_TYPE() As String
		Get
			Return Me._XML_TYPE
		End Get
		Set
			If (String.Equals(Me._XML_TYPE, value) = false) Then
				Me.OnXML_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._XML_TYPE = value
				Me.SendPropertyChanged("XML_TYPE")
				Me.OnXML_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property XML_PATH() As String
		Get
			Return Me._XML_PATH
		End Get
		Set
			If (String.Equals(Me._XML_PATH, value) = false) Then
				Me.OnXML_PATHChanging(value)
				Me.SendPropertyChanging
				Me._XML_PATH = value
				Me.SendPropertyChanged("XML_PATH")
				Me.OnXML_PATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property XML_DESCRIPTION() As String
		Get
			Return Me._XML_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._XML_DESCRIPTION, value) = false) Then
				Me.OnXML_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._XML_DESCRIPTION = value
				Me.SendPropertyChanged("XML_DESCRIPTION")
				Me.OnXML_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPNAME", DbType:="NVarChar(50)")>  _
	Public Property GROUPNAME() As String
		Get
			Return Me._GROUPNAME
		End Get
		Set
			If (String.Equals(Me._GROUPNAME, value) = false) Then
				Me.OnGROUPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPNAME = value
				Me.SendPropertyChanged("GROUPNAME")
				Me.OnGROUPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_DESCRIPTION() As String
		Get
			Return Me._TYPE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._TYPE_DESCRIPTION, value) = false) Then
				Me.OnTYPE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_DESCRIPTION = value
				Me.SendPropertyChanged("TYPE_DESCRIPTION")
				Me.OnTYPE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_HEADER", DbType:="NVarChar(MAX)")>  _
	Public Property XML_HEADER() As String
		Get
			Return Me._XML_HEADER
		End Get
		Set
			If (String.Equals(Me._XML_HEADER, value) = false) Then
				Me.OnXML_HEADERChanging(value)
				Me.SendPropertyChanging
				Me._XML_HEADER = value
				Me.SendPropertyChanged("XML_HEADER")
				Me.OnXML_HEADERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_BODY", DbType:="NVarChar(MAX)")>  _
	Public Property XML_BODY() As String
		Get
			Return Me._XML_BODY
		End Get
		Set
			If (String.Equals(Me._XML_BODY, value) = false) Then
				Me.OnXML_BODYChanging(value)
				Me.SendPropertyChanging
				Me._XML_BODY = value
				Me.SendPropertyChanged("XML_BODY")
				Me.OnXML_BODYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_FIELDS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property XML_FIELDS_NAME() As String
		Get
			Return Me._XML_FIELDS_NAME
		End Get
		Set
			If (String.Equals(Me._XML_FIELDS_NAME, value) = false) Then
				Me.OnXML_FIELDS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._XML_FIELDS_NAME = value
				Me.SendPropertyChanged("XML_FIELDS_NAME")
				Me.OnXML_FIELDS_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_CPN_KEEP_SIP")>  _
Partial Public Class XML_CPN_KEEP_SIP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Newcode As String
	
	Private _groupname As String
	
	Private _Status As String
	
	Private _CREATE_DATE_INSERT_XML As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ERROR_LOG As String
	
	Private _XML_DATA As String
	
	Private _STATUS_CER As String
	
	Private _UPDATE_CER As String
	
	Private _INV_NO As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OngroupnameChanging(value As String)
    End Sub
    Partial Private Sub OngroupnameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnERROR_LOGChanging(value As String)
    End Sub
    Partial Private Sub OnERROR_LOGChanged()
    End Sub
    Partial Private Sub OnXML_DATAChanging(value As String)
    End Sub
    Partial Private Sub OnXML_DATAChanged()
    End Sub
    Partial Private Sub OnSTATUS_CERChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_CERChanged()
    End Sub
    Partial Private Sub OnUPDATE_CERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_CERChanged()
    End Sub
    Partial Private Sub OnINV_NOChanging(value As String)
    End Sub
    Partial Private Sub OnINV_NOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupname", DbType:="NVarChar(10)")>  _
	Public Property groupname() As String
		Get
			Return Me._groupname
		End Get
		Set
			If (String.Equals(Me._groupname, value) = false) Then
				Me.OngroupnameChanging(value)
				Me.SendPropertyChanging
				Me._groupname = value
				Me.SendPropertyChanged("groupname")
				Me.OngroupnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE_INSERT_XML", DbType:="DateTime")>  _
	Public Property CREATE_DATE_INSERT_XML() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE_INSERT_XML
		End Get
		Set
			If (Me._CREATE_DATE_INSERT_XML.Equals(value) = false) Then
				Me.OnCREATE_DATE_INSERT_XMLChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE_INSERT_XML = value
				Me.SendPropertyChanged("CREATE_DATE_INSERT_XML")
				Me.OnCREATE_DATE_INSERT_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERROR_LOG", DbType:="NVarChar(MAX)")>  _
	Public Property ERROR_LOG() As String
		Get
			Return Me._ERROR_LOG
		End Get
		Set
			If (String.Equals(Me._ERROR_LOG, value) = false) Then
				Me.OnERROR_LOGChanging(value)
				Me.SendPropertyChanging
				Me._ERROR_LOG = value
				Me.SendPropertyChanged("ERROR_LOG")
				Me.OnERROR_LOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_DATA", DbType:="NVarChar(MAX)")>  _
	Public Property XML_DATA() As String
		Get
			Return Me._XML_DATA
		End Get
		Set
			If (String.Equals(Me._XML_DATA, value) = false) Then
				Me.OnXML_DATAChanging(value)
				Me.SendPropertyChanging
				Me._XML_DATA = value
				Me.SendPropertyChanged("XML_DATA")
				Me.OnXML_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_CER", DbType:="NVarChar(50)")>  _
	Public Property STATUS_CER() As String
		Get
			Return Me._STATUS_CER
		End Get
		Set
			If (String.Equals(Me._STATUS_CER, value) = false) Then
				Me.OnSTATUS_CERChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_CER = value
				Me.SendPropertyChanged("STATUS_CER")
				Me.OnSTATUS_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_CER", DbType:="NVarChar(50)")>  _
	Public Property UPDATE_CER() As String
		Get
			Return Me._UPDATE_CER
		End Get
		Set
			If (String.Equals(Me._UPDATE_CER, value) = false) Then
				Me.OnUPDATE_CERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_CER = value
				Me.SendPropertyChanged("UPDATE_CER")
				Me.OnUPDATE_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INV_NO", DbType:="NVarChar(50)")>  _
	Public Property INV_NO() As String
		Get
			Return Me._INV_NO
		End Get
		Set
			If (String.Equals(Me._INV_NO, value) = false) Then
				Me.OnINV_NOChanging(value)
				Me.SendPropertyChanging
				Me._INV_NO = value
				Me.SendPropertyChanged("INV_NO")
				Me.OnINV_NOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_CPN_KEEP_FOOD")>  _
Partial Public Class XML_CPN_KEEP_FOOD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Newcode As String
	
	Private _groupname As String
	
	Private _Status As String
	
	Private _CREATE_DATE_INSERT_XML As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ERROR_LOG As String
	
	Private _XML_DATA As System.Xml.Linq.XElement
	
	Private _STATUS_CER As String
	
	Private _UPDATE_CER As String
	
	Private _fdpdtno As String
	
	Private _lctlcnno As String
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OngroupnameChanging(value As String)
    End Sub
    Partial Private Sub OngroupnameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnERROR_LOGChanging(value As String)
    End Sub
    Partial Private Sub OnERROR_LOGChanged()
    End Sub
    Partial Private Sub OnXML_DATAChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnXML_DATAChanged()
    End Sub
    Partial Private Sub OnSTATUS_CERChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_CERChanged()
    End Sub
    Partial Private Sub OnUPDATE_CERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_CERChanged()
    End Sub
    Partial Private Sub OnfdpdtnoChanging(value As String)
    End Sub
    Partial Private Sub OnfdpdtnoChanged()
    End Sub
    Partial Private Sub OnlctlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlctlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(50)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupname", DbType:="NVarChar(10)")>  _
	Public Property groupname() As String
		Get
			Return Me._groupname
		End Get
		Set
			If (String.Equals(Me._groupname, value) = false) Then
				Me.OngroupnameChanging(value)
				Me.SendPropertyChanging
				Me._groupname = value
				Me.SendPropertyChanged("groupname")
				Me.OngroupnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE_INSERT_XML", DbType:="DateTime")>  _
	Public Property CREATE_DATE_INSERT_XML() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE_INSERT_XML
		End Get
		Set
			If (Me._CREATE_DATE_INSERT_XML.Equals(value) = false) Then
				Me.OnCREATE_DATE_INSERT_XMLChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE_INSERT_XML = value
				Me.SendPropertyChanged("CREATE_DATE_INSERT_XML")
				Me.OnCREATE_DATE_INSERT_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERROR_LOG", DbType:="NVarChar(MAX)")>  _
	Public Property ERROR_LOG() As String
		Get
			Return Me._ERROR_LOG
		End Get
		Set
			If (String.Equals(Me._ERROR_LOG, value) = false) Then
				Me.OnERROR_LOGChanging(value)
				Me.SendPropertyChanging
				Me._ERROR_LOG = value
				Me.SendPropertyChanged("ERROR_LOG")
				Me.OnERROR_LOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_DATA", DbType:="Xml", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property XML_DATA() As System.Xml.Linq.XElement
		Get
			Return Me._XML_DATA
		End Get
		Set
			If (Object.Equals(Me._XML_DATA, value) = false) Then
				Me.OnXML_DATAChanging(value)
				Me.SendPropertyChanging
				Me._XML_DATA = value
				Me.SendPropertyChanged("XML_DATA")
				Me.OnXML_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_CER", DbType:="NVarChar(50)")>  _
	Public Property STATUS_CER() As String
		Get
			Return Me._STATUS_CER
		End Get
		Set
			If (String.Equals(Me._STATUS_CER, value) = false) Then
				Me.OnSTATUS_CERChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_CER = value
				Me.SendPropertyChanged("STATUS_CER")
				Me.OnSTATUS_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_CER", DbType:="NVarChar(50)")>  _
	Public Property UPDATE_CER() As String
		Get
			Return Me._UPDATE_CER
		End Get
		Set
			If (String.Equals(Me._UPDATE_CER, value) = false) Then
				Me.OnUPDATE_CERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_CER = value
				Me.SendPropertyChanged("UPDATE_CER")
				Me.OnUPDATE_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdpdtno", DbType:="NVarChar(MAX)")>  _
	Public Property fdpdtno() As String
		Get
			Return Me._fdpdtno
		End Get
		Set
			If (String.Equals(Me._fdpdtno, value) = false) Then
				Me.OnfdpdtnoChanging(value)
				Me.SendPropertyChanging
				Me._fdpdtno = value
				Me.SendPropertyChanged("fdpdtno")
				Me.OnfdpdtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctlcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lctlcnno() As String
		Get
			Return Me._lctlcnno
		End Get
		Set
			If (String.Equals(Me._lctlcnno, value) = false) Then
				Me.OnlctlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lctlcnno = value
				Me.SendPropertyChanged("lctlcnno")
				Me.OnlctlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_CPN_KEEP_FOOD_TEMP")>  _
Partial Public Class XML_CPN_KEEP_FOOD_TEMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Newcode As String
	
	Private _groupname As String
	
	Private _Status As String
	
	Private _CREATE_DATE_INSERT_XML As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ERROR_LOG As String
	
	Private _XML_DATA As System.Xml.Linq.XElement
	
	Private _STATUS_CER As String
	
	Private _UPDATE_CER As String
	
	Private _fdpdtno As String
	
	Private _lctlcnno As String
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OngroupnameChanging(value As String)
    End Sub
    Partial Private Sub OngroupnameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnERROR_LOGChanging(value As String)
    End Sub
    Partial Private Sub OnERROR_LOGChanged()
    End Sub
    Partial Private Sub OnXML_DATAChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnXML_DATAChanged()
    End Sub
    Partial Private Sub OnSTATUS_CERChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_CERChanged()
    End Sub
    Partial Private Sub OnUPDATE_CERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_CERChanged()
    End Sub
    Partial Private Sub OnfdpdtnoChanging(value As String)
    End Sub
    Partial Private Sub OnfdpdtnoChanged()
    End Sub
    Partial Private Sub OnlctlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlctlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(50)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupname", DbType:="NVarChar(10)")>  _
	Public Property groupname() As String
		Get
			Return Me._groupname
		End Get
		Set
			If (String.Equals(Me._groupname, value) = false) Then
				Me.OngroupnameChanging(value)
				Me.SendPropertyChanging
				Me._groupname = value
				Me.SendPropertyChanged("groupname")
				Me.OngroupnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE_INSERT_XML", DbType:="DateTime")>  _
	Public Property CREATE_DATE_INSERT_XML() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE_INSERT_XML
		End Get
		Set
			If (Me._CREATE_DATE_INSERT_XML.Equals(value) = false) Then
				Me.OnCREATE_DATE_INSERT_XMLChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE_INSERT_XML = value
				Me.SendPropertyChanged("CREATE_DATE_INSERT_XML")
				Me.OnCREATE_DATE_INSERT_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERROR_LOG", DbType:="NVarChar(MAX)")>  _
	Public Property ERROR_LOG() As String
		Get
			Return Me._ERROR_LOG
		End Get
		Set
			If (String.Equals(Me._ERROR_LOG, value) = false) Then
				Me.OnERROR_LOGChanging(value)
				Me.SendPropertyChanging
				Me._ERROR_LOG = value
				Me.SendPropertyChanged("ERROR_LOG")
				Me.OnERROR_LOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_DATA", DbType:="Xml", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property XML_DATA() As System.Xml.Linq.XElement
		Get
			Return Me._XML_DATA
		End Get
		Set
			If (Object.Equals(Me._XML_DATA, value) = false) Then
				Me.OnXML_DATAChanging(value)
				Me.SendPropertyChanging
				Me._XML_DATA = value
				Me.SendPropertyChanged("XML_DATA")
				Me.OnXML_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_CER", DbType:="NVarChar(50)")>  _
	Public Property STATUS_CER() As String
		Get
			Return Me._STATUS_CER
		End Get
		Set
			If (String.Equals(Me._STATUS_CER, value) = false) Then
				Me.OnSTATUS_CERChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_CER = value
				Me.SendPropertyChanged("STATUS_CER")
				Me.OnSTATUS_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_CER", DbType:="NVarChar(50)")>  _
	Public Property UPDATE_CER() As String
		Get
			Return Me._UPDATE_CER
		End Get
		Set
			If (String.Equals(Me._UPDATE_CER, value) = false) Then
				Me.OnUPDATE_CERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_CER = value
				Me.SendPropertyChanged("UPDATE_CER")
				Me.OnUPDATE_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdpdtno", DbType:="NVarChar(MAX)")>  _
	Public Property fdpdtno() As String
		Get
			Return Me._fdpdtno
		End Get
		Set
			If (String.Equals(Me._fdpdtno, value) = false) Then
				Me.OnfdpdtnoChanging(value)
				Me.SendPropertyChanging
				Me._fdpdtno = value
				Me.SendPropertyChanged("fdpdtno")
				Me.OnfdpdtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctlcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lctlcnno() As String
		Get
			Return Me._lctlcnno
		End Get
		Set
			If (String.Equals(Me._lctlcnno, value) = false) Then
				Me.OnlctlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lctlcnno = value
				Me.SendPropertyChanged("lctlcnno")
				Me.OnlctlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_CPN_KEEP_MDC")>  _
Partial Public Class XML_CPN_KEEP_MDC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Newcode As String
	
	Private _groupname As String
	
	Private _Status As String
	
	Private _CREATE_DATE_INSERT_XML As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ERROR_LOG As String
	
	Private _XML_DATA As String
	
	Private _STATUS_CER As String
	
	Private _UPDATE_CER As String
	
	Private _Doc_no As String
	
	Private _lcntypecd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OngroupnameChanging(value As String)
    End Sub
    Partial Private Sub OngroupnameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnERROR_LOGChanging(value As String)
    End Sub
    Partial Private Sub OnERROR_LOGChanged()
    End Sub
    Partial Private Sub OnXML_DATAChanging(value As String)
    End Sub
    Partial Private Sub OnXML_DATAChanged()
    End Sub
    Partial Private Sub OnSTATUS_CERChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_CERChanged()
    End Sub
    Partial Private Sub OnUPDATE_CERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_CERChanged()
    End Sub
    Partial Private Sub OnDoc_noChanging(value As String)
    End Sub
    Partial Private Sub OnDoc_noChanged()
    End Sub
    Partial Private Sub OnlcntypecdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntypecdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupname", DbType:="NVarChar(10)")>  _
	Public Property groupname() As String
		Get
			Return Me._groupname
		End Get
		Set
			If (String.Equals(Me._groupname, value) = false) Then
				Me.OngroupnameChanging(value)
				Me.SendPropertyChanging
				Me._groupname = value
				Me.SendPropertyChanged("groupname")
				Me.OngroupnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE_INSERT_XML", DbType:="DateTime")>  _
	Public Property CREATE_DATE_INSERT_XML() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE_INSERT_XML
		End Get
		Set
			If (Me._CREATE_DATE_INSERT_XML.Equals(value) = false) Then
				Me.OnCREATE_DATE_INSERT_XMLChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE_INSERT_XML = value
				Me.SendPropertyChanged("CREATE_DATE_INSERT_XML")
				Me.OnCREATE_DATE_INSERT_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERROR_LOG", DbType:="NVarChar(MAX)")>  _
	Public Property ERROR_LOG() As String
		Get
			Return Me._ERROR_LOG
		End Get
		Set
			If (String.Equals(Me._ERROR_LOG, value) = false) Then
				Me.OnERROR_LOGChanging(value)
				Me.SendPropertyChanging
				Me._ERROR_LOG = value
				Me.SendPropertyChanged("ERROR_LOG")
				Me.OnERROR_LOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_DATA", DbType:="NVarChar(MAX)")>  _
	Public Property XML_DATA() As String
		Get
			Return Me._XML_DATA
		End Get
		Set
			If (String.Equals(Me._XML_DATA, value) = false) Then
				Me.OnXML_DATAChanging(value)
				Me.SendPropertyChanging
				Me._XML_DATA = value
				Me.SendPropertyChanged("XML_DATA")
				Me.OnXML_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_CER", DbType:="NVarChar(50)")>  _
	Public Property STATUS_CER() As String
		Get
			Return Me._STATUS_CER
		End Get
		Set
			If (String.Equals(Me._STATUS_CER, value) = false) Then
				Me.OnSTATUS_CERChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_CER = value
				Me.SendPropertyChanged("STATUS_CER")
				Me.OnSTATUS_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_CER", DbType:="NVarChar(50)")>  _
	Public Property UPDATE_CER() As String
		Get
			Return Me._UPDATE_CER
		End Get
		Set
			If (String.Equals(Me._UPDATE_CER, value) = false) Then
				Me.OnUPDATE_CERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_CER = value
				Me.SendPropertyChanged("UPDATE_CER")
				Me.OnUPDATE_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Doc_no", DbType:="NVarChar(50)")>  _
	Public Property Doc_no() As String
		Get
			Return Me._Doc_no
		End Get
		Set
			If (String.Equals(Me._Doc_no, value) = false) Then
				Me.OnDoc_noChanging(value)
				Me.SendPropertyChanging
				Me._Doc_no = value
				Me.SendPropertyChanged("Doc_no")
				Me.OnDoc_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntypecd", DbType:="NVarChar(50)")>  _
	Public Property lcntypecd() As String
		Get
			Return Me._lcntypecd
		End Get
		Set
			If (String.Equals(Me._lcntypecd, value) = false) Then
				Me.OnlcntypecdChanging(value)
				Me.SendPropertyChanging
				Me._lcntypecd = value
				Me.SendPropertyChanged("lcntypecd")
				Me.OnlcntypecdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_CPN_KEEP_MDC_TEMP")>  _
Partial Public Class XML_CPN_KEEP_MDC_TEMP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Newcode As String
	
	Private _groupname As String
	
	Private _Status As String
	
	Private _CREATE_DATE_INSERT_XML As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _ERROR_LOG As String
	
	Private _XML_DATA As String
	
	Private _STATUS_CER As String
	
	Private _UPDATE_CER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNewcodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewcodeChanged()
    End Sub
    Partial Private Sub OngroupnameChanging(value As String)
    End Sub
    Partial Private Sub OngroupnameChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATE_INSERT_XMLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnERROR_LOGChanging(value As String)
    End Sub
    Partial Private Sub OnERROR_LOGChanged()
    End Sub
    Partial Private Sub OnXML_DATAChanging(value As String)
    End Sub
    Partial Private Sub OnXML_DATAChanged()
    End Sub
    Partial Private Sub OnSTATUS_CERChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_CERChanged()
    End Sub
    Partial Private Sub OnUPDATE_CERChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_CERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode() As String
		Get
			Return Me._Newcode
		End Get
		Set
			If (String.Equals(Me._Newcode, value) = false) Then
				Me.OnNewcodeChanging(value)
				Me.SendPropertyChanging
				Me._Newcode = value
				Me.SendPropertyChanged("Newcode")
				Me.OnNewcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupname", DbType:="NVarChar(10)")>  _
	Public Property groupname() As String
		Get
			Return Me._groupname
		End Get
		Set
			If (String.Equals(Me._groupname, value) = false) Then
				Me.OngroupnameChanging(value)
				Me.SendPropertyChanging
				Me._groupname = value
				Me.SendPropertyChanged("groupname")
				Me.OngroupnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE_INSERT_XML", DbType:="DateTime")>  _
	Public Property CREATE_DATE_INSERT_XML() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE_INSERT_XML
		End Get
		Set
			If (Me._CREATE_DATE_INSERT_XML.Equals(value) = false) Then
				Me.OnCREATE_DATE_INSERT_XMLChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE_INSERT_XML = value
				Me.SendPropertyChanged("CREATE_DATE_INSERT_XML")
				Me.OnCREATE_DATE_INSERT_XMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ERROR_LOG", DbType:="NVarChar(MAX)")>  _
	Public Property ERROR_LOG() As String
		Get
			Return Me._ERROR_LOG
		End Get
		Set
			If (String.Equals(Me._ERROR_LOG, value) = false) Then
				Me.OnERROR_LOGChanging(value)
				Me.SendPropertyChanging
				Me._ERROR_LOG = value
				Me.SendPropertyChanged("ERROR_LOG")
				Me.OnERROR_LOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_DATA", DbType:="NVarChar(MAX)")>  _
	Public Property XML_DATA() As String
		Get
			Return Me._XML_DATA
		End Get
		Set
			If (String.Equals(Me._XML_DATA, value) = false) Then
				Me.OnXML_DATAChanging(value)
				Me.SendPropertyChanging
				Me._XML_DATA = value
				Me.SendPropertyChanged("XML_DATA")
				Me.OnXML_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_CER", DbType:="NVarChar(50)")>  _
	Public Property STATUS_CER() As String
		Get
			Return Me._STATUS_CER
		End Get
		Set
			If (String.Equals(Me._STATUS_CER, value) = false) Then
				Me.OnSTATUS_CERChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_CER = value
				Me.SendPropertyChanged("STATUS_CER")
				Me.OnSTATUS_CERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_CER", DbType:="NVarChar(50)")>  _
	Public Property UPDATE_CER() As String
		Get
			Return Me._UPDATE_CER
		End Get
		Set
			If (String.Equals(Me._UPDATE_CER, value) = false) Then
				Me.OnUPDATE_CERChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_CER = value
				Me.SendPropertyChanged("UPDATE_CER")
				Me.OnUPDATE_CERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
